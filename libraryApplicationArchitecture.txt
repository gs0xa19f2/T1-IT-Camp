Архитектура микросервисного приложения «Цифровизация библиотек»

                              +------------------------------------------+
                              |   Пользовательский портал / Моб. апп     |
                              +-------------------+----------------------+
                                                  |
                                                  | REST API
                                                  v
        +-------------------+   +--------------------------+   +------------------+
        |  API Gateway      |-->| Backend for Frontend     |-->| Notification     |
        | (Kong/NGINX)      |   | (BFF, REST, GRPC)        |   | Service          |
        +-------------------+   +--------------------------+   | (SMS/email/push) |
                  |                            |                 +------------------+
                  |                            | REST/GRPC
                  v                            v
+-----------------------+   +---------------------------+   +----------------------+
|  Auth Service         |   | Поисковый сервис         |   | Сервис заказов/плат  |
| (Keycloak, OAuth2)    |<->| (ElasticSearch/Sphinx)   |<->| (БД, платежи, webhooks)|
+-----------------------+   +---------------------------+   +----------------------+
                                                      |
                                                      | REST/GRPC
                                                      v
                                            +--------------------------+
                                            |  Сервис управления       |
                                            |      курьерами          |
                                            +--------------------------+
                                                      |
                                                      | интеграция через адаптеры
                                                      v
                                            +--------------------------+
                                            | Интеграционный слой      |
                                            | для внешних курьеров     |
                                            +--------------------------+
                                                      |
                                                      v
                                            +--------------------------+
                                            | Внешние курьерские службы|
                                            +--------------------------+

<----------------------------- Kafka, Events ------------------------------------>
          |                                                             ^
          v                                                             |
+-------------------------+                                +--------------------------+
|   Админка библиотек     |<---DB (Postgres/MySQL)-------> | Воркеры распознавания   |
| (REST, GRPC, картотека) |                                | файлов картотеки        |
+-------------------------+                                +--------------------------+
          |
          | REST
          v
+-------------------------+
| Сервис загрузки файлов  |
| (REST, S3-хранилище)    |
+-------------------------+

          | REST/GRPC
          v
+--------------------------+
| Сервис расписаний/график |
+--------------------------+

          | REST/GRPC
          v
+--------------------------+
| Сервис штрафов           |
+--------------------------+

          | REST/GRPC
          v
+--------------------------+
| Data Lake/Аналитика      |
| (S3/HDFS, Spark, BI)     |
+--------------------------+

          | Monitoring/Audit/DR
          v
+--------------------------+
| Security & Audit         |
| (логирование, SIEM,      |
| шифрование, политики)    |
+--------------------------+

          | CI/CD
          v
+--------------------------+
| DevOps Pipeline          |
| (GitHub Actions,         |
| Jenkins, Helm, K8s)      |
+--------------------------+

          | Документирование
          v
+--------------------------+
| API Docs                 |
| (Swagger/OpenAPI,        |
| Confluence, Redoc)       |
+--------------------------+

(Все сервисы: автоскейлинг, балансировка, репликация, резервное копирование)

Кластеры/зоны развертывания:
    - Сибирь, Дальний Восток, Центральная Россия 
	- Для всех критичных сервисов и хранилищ реализованы механизмы резервного копирования (Backup/Restore), регулярные тесты восстановления, хранение резервных копий в отдельных зонах
	- DR-планы: автоматическое переключение на реплики при сбоях, репликация данных между регионами, мониторинг состояния хранения и доступности


Микросервисы:
	1) Админка библиотек
		- Управление картотекой пользователей и книг, график выдачи, штрафы
		- REST API (публичное), GRPC API (приватное)
		- Данные: реляционная БД (PostgreSQL/MySQL), standby репликация
		- Kafka: публикация событий об изменениях в картотеке
		- Балансировка: L3 round-robin
		
	2) Сервис загрузки файлов
		- REST API, L7 DNS балансер
		- S3-совместимое хранилище (MinIO, Amazon S3, Yandex Object Storage)
		- Kafka: событие о загрузке
		- Троттлинг uploads при росте consumer lag
	
	3) Воркеры распознавания файлов
		- Автоскейл по Kafka consumer lag (KEDA)
		- После распознавания — запись в БД админки
	
	4) Сервис поиска
		- Индексы ElasticSearch (или Sphinx)
		- GRPC API для фронта
		- Балансировка: L7 DNS Round-Robin, headless сервис
	
	5) Портал и мобильная аппка (Backend for Frontend)
		- REST API
		- Автоскейл по CPU, ~9 инстансов
		- Балансировка: L7 DNS Round-Robin
		- Взаимодействие: с поиском, сервисом заказов
		
	6) Сервис аутентификации и авторизации
		- Identity Provider (Keycloak)
		- Интеграция с пользовательским порталом и админкой
	
	7) Сервис управления курьерами
		- REST/GRPC API
		- Интеграция с внешними курьерскими службами
	
	8) Сервис заказов и платежей
		- REST API
		- Интеграция с платежными провайдерами (вебхуки)
		- Хранение: реляционная БД
		- Взимание платы: поддержка безналичных/наличных/карт
		
	9) Сервис уведомлений
		- Централизованная отправка push/SMS/email уведомлений (напоминания, статусы заказов, оповещения о просроченных возвратах и др.)
		- REST/GRPC API для других сервисов
		- Интеграция с внешними провайдерами (SMS/email/push)
		- Хранение истории уведомлений (NoSQL, например MongoDB)
	
	10) Интеграционный слой для внешних курьерских служб
		- Адаптеры под различные API курьерских компаний
		- REST/GRPC API для внутреннего сервиса курьеров
		- Мониторинг интеграций, fallback-логика
		- Логирование статусов/ошибок интеграций
	
	11) Сервис расписаний/графика выдачи
		- Управление резервированием книг, формирование расписания выдачи и возврата
		- REST/GRPC API
		- Хранение: специализированная БД для расписаний (например, TimescaleDB или PostgreSQL)
	
	12) Сервис управления штрафами
		- Расчёт штрафов, поддержка апелляций и интеграция с муниципальными системами
		- REST API, интеграция с сервисом заказов/платежей
		- Хранение: реляционная БД
	
	13) Data Lake/архив для аналитики
		- Хранение событий, логов, истории заказов, поведения пользователей для последующей аналитики и построения отчетов
		- S3/HDFS, Spark/ClickHouse, BI-инструменты
	
	14) Security & Audit
		- Логирование доступа, аудит действий пользователей и админов
		- Шифрование персональных данных, контроль соответствия регламентам (GDPR, ФЗ-152)
		- SIEM, политики хранения и удаления данных
	
	15) DevOps/CI-CD Pipeline
		- Автоматизация развертывания, тестирования и отката сервисов (GitHub Actions, Jenkins, Helm, Kubernetes)
		- Мониторинг состояния деплойментов
	
	16) API Gateway
		- Единая точка входа для всех внешних API (Kong, NGINX, AWS API Gateway)
		- Авторизация, throttling, rate limiting, маршрутизация запросов
	
	17) Документирование API/системы
		- Хранение и публикация спецификаций API (Swagger/OpenAPI, Redoc, Confluence)
		- Версионирование документации
	
Взаимодействие между сервисами
	- Kafka — для событий и асинхронных изменений (изменения картотеки, загрузка файлов, события поиска, статусы заказов)
	- GRPC — для приватного взаимодействия между сервисами, где нужна скорость и строгий контракт
	- REST API — для фронта, мобильной аппки, интеграции с внешними системами
	- API Gateway — маршрутизация внешних запросов, интеграция с сервисом авторизации, защита от перегрузки
	- Notification Service — взаимодействует с админкой, порталом, сервисом заказов, сервисом курьеров, отправляет уведомления через внешних провайдеров
	- Интеграционный слой для курьерских служб — реализует адаптеры и прокси для разных API, мониторит статусы интеграций
	- Сервис расписаний — получает события из Kafka и обновляет график выдачи/возврата книг
	- Сервис штрафов — обрабатывает события просрочек, взаимодействует с заказами и платежами
	- Data Lake — получает асинхронные события для аналитики из Kafka, хранит большие объемы данных для BI
	- Security & Audit — интеграция с каждым сервисом для логирования, аудита, мониторинга безопасности
	- DevOps/CI-CD pipeline — автоматизация деплоймента всех сервисов, мониторинг откатов и ошибок
	- Документирование — автоматическое обновление документации по мере изменений в API
	
Инструменты для взаимодействия
	- Kafka — асинхронные события между сервисами, очереди задач
	- GRPC — быстрый RPC, строгий контракт (поиск, внутренние вызовы)
	- REST API — для фронтовых сервисов, открытых интеграций
	- S3 — для хранения файлов
	- PostgreSQL/MySQL — для хранения структурированных данных
	- ElasticSearch/Sphinx — для полнотекстового поиска по книгам/пользователям
	
Метрики для мониторинга
	- RPS (requests per second) по каждому сервису
	- CPU/Memory Usage на инстанс
	- Error Rate (5xx, 4xx) по каждому сервису
	- Kafka consumer lag (по каждому топику и воркеру)
	- DB connection pool utilization и latency
	- Upload/Download throughput на сервисе файлов
	- ElasticSearch query latency и размеры индекса
	- GRPC/REST latency межсервисных вызовов
	- Количество заказов/платежей/штрафов в сутки
	- DAU/WAU/MAU (Daily/Weekly/Monthly Active Users)
	- Время обработки заказа книги (от запроса до доставки или возврата)
	- Среднее время доставки книги/возврата
	- Доля просроченных возвратов, количество уведомлений
	- Доля успешно проведённых платежей, успешных интеграций с курьерскими службами
	- Троттлинг uploads, если consumer lag растёт — процент отклонённых/отложенных загрузок
	- Состояние репликации БД (лаг, наличие реплик)
	- Состояние S3, объём файлов, ошибки доступа
	- Процент распознанных файлов от общего числа загруженных
	- Количество успешно доставленных уведомлений, среднее время доставки уведомления
	- Статистика интеграций с курьерскими службами: % успешных/ошибочных запросов, время отклика, fallback-активации
	- Время резервирования и выдачи книги (по сервису расписаний)
	- Количество начисленных/оспоренных штрафов
	- Объем хранимых данных в Data Lake, время построения отчетов
	- Метрики безопасности: количество подозрительных действий, успешных/неуспешных попыток авторизации, частота аудита
	- Деплойменты: время развертывания, количество успешных/неудачных релизов
	- API Gateway: количество запросов, распределение нагрузки, количество заблокированных/ограниченных запросов
	- Документирование: обновления документации, количество обращений к спецификациям

Мониторинг и алерты
	Prometheus + Grafana, OpenTelemetry, Kafka JMX exporter, ElasticSearch exporter, DB exporter
	
Бизнес-логика
	- Объём пользователей/DAU — влияет на автоскейлинг, размер пулов, планирование инфраструктуры
	- Трекинг доставки книги — сервис курьеров+интеграция, статусы в заказах, push/email/SMS уведомления
	- Взимание платы — через сервис заказов и платежей, поддержка внешних провайдеров
	- Оцифровка картотеки — воркеры, сервис загрузки, ручная/автоматическая обработка, источник правды — БД админки
	- Регистрация библиотек — через админку, возможно с ручной верификацией
	- Поиск по книгам — полнотекстовый (title, author), доп. критерии (жанр, год, язык, местоположение)
	- Напоминания о возврате — через уведомления (SMS, push, email), настраиваемые в админке или профиле пользователя
	
	
Замечание: для MVP при наличии требований к более простой архитектуре можно обойтись следующей схемой

                       +------------------------------------------+
                       |   Пользовательский портал / Моб. апп     |
                       +-------------------+----------------------+
                                           |
                                           | REST API
                                           v
                          +-------------------------------+
                          |   Backend for Frontend (BFF)  |
                          +-------------------------------+
                                  |           |
                           REST/GRPC         REST
                                 v            v
+---------------------+   +-----------------------------+   +----------------------+
|  Auth Service       |   | Поисковый сервис           |   | Сервис заказов/плат  |
| (Keycloak, OAuth2)  |<->| (ElasticSearch/Sphinx)     |<->| (БД, платежи, webhooks) |
+---------------------+   +-----------------------------+   +----------------------+
                                                      |
                                                      | REST/GRPC
                                                      v
                                            +--------------------------+
                                            |  Сервис управления       |
                                            |      курьерами          |
                                            +--------------------------+
                                                      ^
                                                      | интеграция
                                                      v
                                            +--------------------------+
                                            | Внешние курьерские службы|
                                            +--------------------------+

<----------------------------- Kafka, Events ------------------------------------>
          |                                                             ^
          v                                                             |
+-------------------------+                                +--------------------------+
|   Админка библиотек     |<---DB (Postgres/MySQL)-------> | Воркеры распознавания   |
| (REST, GRPC, картотека) |                                | файлов картотеки        |
+-------------------------+                                +--------------------------+
          |
          | REST
          v
+-------------------------+
| Сервис загрузки файлов  |
| (REST, S3-хранилище)    |
+-------------------------+

(Все сервисы: автоскейлинг, балансировка, репликация)

